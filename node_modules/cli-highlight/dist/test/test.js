"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const assert = require("assert");
const chalk_1 = require("chalk");
const index_1 = require("../index");
class HighlightAssertionError extends assert.AssertionError {
    constructor(actual, expected) {
        super({ actual, expected });
        this.message = '';
        this.name = '';
    }
}
function test(language, code, expected) {
    it(`should color ${language} correctly`, () => {
        const highlighted = index_1.highlight(code);
        if (highlighted.trim() !== expected.trim()) {
            throw new HighlightAssertionError(highlighted, expected);
        }
        else {
            console.log(highlighted + '\n');
        }
    });
}
test('SQL', `
    -- Create a table
    CREATE TABLE "topic" (
        "id" serial NOT NULL PRIMARY KEY,
        "forum_id" integer NOT NULL,
        "subject" varchar(255) NOT NULL
    );
`, `
    ${chalk_1.default.green('-- Create a table')}
    ${chalk_1.default.blue('CREATE')} ${chalk_1.default.blue('TABLE')} ${chalk_1.default.red('"topic"')} (
        ${chalk_1.default.red('"id"')} ${chalk_1.default.cyan('serial')} ${chalk_1.default.blue('NOT')} ${chalk_1.default.blue('NULL')} PRIMARY ${chalk_1.default.blue('KEY')},
        ${chalk_1.default.red('"forum_id"')} ${chalk_1.default.cyan('integer')} ${chalk_1.default.blue('NOT')} ${chalk_1.default.blue('NULL')},
        ${chalk_1.default.red('"subject"')} ${chalk_1.default.cyan('varchar')}(${chalk_1.default.green('255')}) ${chalk_1.default.blue('NOT')} ${chalk_1.default.blue('NULL')}
    );
`);
test('JSON', `
    [
        {
            "title": "apples",
            "count": [12000, 20000],
            "description": {"text": "...", "sensitive": false}
        }
    ]
`, `
    [
        {
            ${chalk_1.default.cyan('"title"')}: ${chalk_1.default.red('"apples"')},
            ${chalk_1.default.cyan('"count"')}: [${chalk_1.default.green('12000')}, ${chalk_1.default.green('20000')}],
            ${chalk_1.default.cyan('"description"')}: {${chalk_1.default.cyan('"text"')}: ${chalk_1.default.red('"..."')}, ${chalk_1.default.cyan('"sensitive"')}: ${chalk_1.default.blue('false')}}
        }
    ]
`);
test('HTML', `
    <!DOCTYPE html>
    <html>
        <head>
            <title>Hello World!</title>
        </head>
        <body>
            <h1>Foo</h1>
            <div>Bar</div>
        </body>
    </html>
`, `
    ${chalk_1.default.grey('<!DOCTYPE html>')}
    ${chalk_1.default.grey(`<${chalk_1.default.blue('html')}>`)}
        ${chalk_1.default.grey(`<${chalk_1.default.blue('head')}>`)}
            ${chalk_1.default.grey(`<${chalk_1.default.blue('title')}>`)}Hello World!${chalk_1.default.grey(`</${chalk_1.default.blue('title')}>`)}
        ${chalk_1.default.grey(`</${chalk_1.default.blue('head')}>`)}
        ${chalk_1.default.grey(`<${chalk_1.default.blue('body')}>`)}
            ${chalk_1.default.grey(`<${chalk_1.default.blue('h1')}>`)}Foo${chalk_1.default.grey(`</${chalk_1.default.blue('h1')}>`)}
            ${chalk_1.default.grey(`<${chalk_1.default.blue('div')}>`)}Bar${chalk_1.default.grey(`</${chalk_1.default.blue('div')}>`)}
        ${chalk_1.default.grey(`</${chalk_1.default.blue('body')}>`)}
    ${chalk_1.default.grey(`</${chalk_1.default.blue('html')}>`)}
`);
//# sourceMappingURL=test.js.map